const app = require("../index");
const supertest = require("supertest");
const delete_model = require("../models/delete_model");

afterEach(async () => {
  await app.close();
});

it("Testing to see if Jest works", () => {
  expect(1).toBe(1);
});

// USER to obtain JWT
const loginData = {
  useremail: "dev18@gmail.com",
  userpassword: "pass",
};
test("Post post with JWT", async () => {
  // GET A JWT FIRST
  const logininfo = await supertest(app)
    .post("/api/login")
    .send(loginData)
    .expect(200)
    .then((response) => {
      // console.log(response.body);
      // jwt = response.body.accessToken;
      // console.log(jwt);
      return response.body;
    });
  // A opportunity data object
  const opportuntiydata = {
    usersponsors: {"creator": logininfo.userid },
    locationtype: "",
    eventlocation: "",
    eventzoomlink: "https://zoom.com/zoomlink",
    eventlocation: "",
    organization: "",
    description: "This is a opportunity generated by a unit test!",
    preferences: {
        "major": "any",
        "graduationyears": "-2009"
      },
    eventdata: "",
    startdate: "2022-02-27",
    enddate: "2022-03-01",
    eventbanner: "https://freerangestock.com/sample/132099/golden-microphone.jpg",
    eventname: "UCSC Computer Science Club - Guest Speaker Day",
    userparticipants: "",
    organizationtype: "",
    opportunitytype: "",
    roles: [],
    starttime: "2022-02-28T11:30:00.535Z",
    endtime: "2022-03-01T11:30:00.535Z",
    subject: "",
    assignedroles: {},
  };

  //   Insert opportunity
  const opportunityid = await supertest(app).post('/api/postOpportunity')
  .set('Cookie', [`accessToken=${logininfo.accessToken}`])
  .send(opportuntiydata)
  .expect(201)
  .then((response) =>{
      return response.body;
  });
});
